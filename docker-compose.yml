version: '3.8'

services:
  # kafka-broker:
  #   image: bitnami/kafka:latest
  #   container_name: kafka-broker
  #   environment:
  #     KAFKA_ENABLE_KRAFT: "yes"
  #     KAFKA_CFG_NODE_ID: 1
  #     KAFKA_CFG_PROCESS_ROLES: broker,controller
  #     KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
  #     KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092,EXTERNAL://localhost:9094
  #     KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-broker:9093
  #     KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #     KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     ALLOW_PLAINTEXT_LISTENER: "yes"
  #   ports:
  #     - "9094:9094"
  #   networks:
  #     - food-delivery-network
  
  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   container_name: kafka-ui
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local-cluster
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker:9092
  #     KAFKA_CLUSTERS_0_READONLY: "false"
  #     KAFKA_CLUSTERS_0_TOPIC_AUTO_CREATE: "true"
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - kafka-broker
  #   networks:
  #     - food-delivery-network
  
  user-service:
    build: ./user-service
    ports:
      - "3001:3001"
    env_file:
      - ./user-service/.env
    environment:
      - NODE_ENV=production
    networks:
      - food-delivery-network

  restaurant-service:
    build: ./restaurant-service
    ports:
      - "3002:3002"
    env_file:
      - ./restaurant-service/.env
    environment:
      - NODE_ENV=production
    networks:
      - food-delivery-network

  order-service:
    build: ./order-service
    ports:
      - "3003:3003"
    env_file:
      - ./order-service/.env
    environment:
      - NODE_ENV=production
    networks:
      - food-delivery-network

  food-service:
    build: ./food-service
    ports:
      - "3004:3004"
    env_file:
      - ./food-service/.env
    environment:
      - NODE_ENV=production
    networks:
      - food-delivery-network

  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - user-service
      - restaurant-service
      - order-service
      - food-service
    environment:
      - NODE_ENV=production
    networks:
      - food-delivery-network

networks:
  food-delivery-network:
    driver: bridge